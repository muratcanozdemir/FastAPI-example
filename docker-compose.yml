version: '0.10'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 18

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 10

  redis:
    image: "redis:alpine"
    privileged: true
    command: ["sh", "-c", "sysctl -w vm.overcommit_memory=1 && redis-server"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 10
  

  api:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile-api
    ports:
      - "8000:8000"

  answer:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile-answer
    ports:
      - "8001:8001"
    depends_on:
      elasticsearch:
        condition: service_healthy

  conversation:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile-conversation
    ports:
      - "8002:8002"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile-conversation
    command: celery -A conversation_service.app.celery_app worker --loglevel=info
    scale: 1
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
